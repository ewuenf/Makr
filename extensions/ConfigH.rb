
module Makr



  # Convenience class related to generating a config.h file for include with all global defines
  class ConfigH

    def initialize(fileName)
      @fileName = fileName
      @definesHash = Hash.new
    end

    
    def addDefine(name, description = String.new)
      if @definesHash.has_key?(name) then
        raise "ConfigH: Define already set: #{name} #{description}"
      end
      @definesHash[name] = description
      nil
    end


    def reDefine(name, description)
      @definesHash[name] = description
      nil
    end

    def hasDefine(name)
      @definesHash.has_key?(name)
    end

    def generateFile
      File.open(@fileName, "w+") do |file|
        file << "\n\n/* ~~~~~~~~~~~~~ This header is generated by the Makr build system, all changes will possibly be LOST! ~~~~~~~~~~~~ */\n\n\n"
        @definesHash.each do |name, description|
          # split description into multi-line comment
          descriptionWords = description.split
          i = 0
          file << "/*\n"
          descriptionWords.each do |word|
            file << "#{word} "
            i += word.size
            if i > 80 then
              file << "\n"
              i = 0
            end
          end
          file << "\n*/\n#define #{name}\n\n\n"
        end
      end
    end

  end



end

